# 此Dockerfile适用于“无本地模型”的环境构建，如果需要使用chatglm等本地模型，请参考 docs/Dockerfile+ChatGLM
# - 1 修改 `config.py`
# - 2 构建 docker build -t gpt-academic-nolocal-latex -f docs/GithubAction+NoLocal+Latex .
# - 3 运行 docker run -v /home/fuqingxu/arxiv_cache:/root/arxiv_cache --rm -it --net=host gpt-academic-nolocal-latex

# FROM fuqingxu/python311_texlive_ctex:latest
# 制作arm64的镜像
FROM zupher/ubuntu_arm_py310_latex:latest

ENV PATH "$PATH:/usr/bin"
# 安装 pyenv 的 python3.11.7
RUN apt update
RUN apt-get install -y --no-install-recommends make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev

ENV HOME="/gpt"
WORKDIR ${HOME}
RUN apt-get install -y git
RUN git clone --depth=1 https://github.com/pyenv/pyenv.git .pyenv
ENV PYENV_ROOT="${HOME}/.pyenv"
ENV PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"

ENV PYTHON_VERSION=3.11
RUN pyenv install ${PYTHON_VERSION}
RUN pyenv global ${PYTHON_VERSION}


# ENV PATH "$PATH:/usr/local/texlive/2022/bin/x86_64-linux"
# ENV PATH "$PATH:/usr/local/texlive/2023/bin/x86_64-linux"
# ENV PATH "$PATH:/usr/local/texlive/2024/bin/x86_64-linux"
# ENV PATH "$PATH:/usr/local/texlive/2025/bin/x86_64-linux"
# ENV PATH "$PATH:/usr/local/texlive/2026/bin/x86_64-linux"

# 指定路径
# WORKDIR /root/gpt

RUN pip3 install openai numpy arxiv rich 
RUN pip3 install colorama Markdown pygments pymupdf 
RUN pip3 install python-docx pdfminer 
RUN pip3 install nougat-ocr 

# 装载项目文件
COPY . .


# 安装依赖
RUN pip3 install -r requirements.txt 

# 可选步骤，用于预热模块
RUN python3  -c 'from check_proxy import warm_up_modules; warm_up_modules()'

# 启动
CMD ["python3", "-u", "main.py"]
